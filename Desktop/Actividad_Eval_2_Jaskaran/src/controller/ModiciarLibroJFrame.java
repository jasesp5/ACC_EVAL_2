/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controller;

import Services.LibroService;
import Services.TematicaService;
import classes.Libro;
import classes.Tematica;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Shajinder
 */
public class ModiciarLibroJFrame extends javax.swing.JFrame {

    /**
     * Creates new form MostrarLibroJFrame
     */
    private final String ERROR_NUMERO = "Solo puedes introducir números enteros";
    private final String LIBRO_MODIFICADO = "El libro ha sido modificado correctamente";
    private final String TEMA_REPETIDO = "El tema que elegido ya está añadido";
    private final String NOMBRE_VACIO = "El campo del nombre está vacio";
    private final String AUTOR_VACIO = "El campo del autor está vacio";
    private final String EDITORIAL_VACIO = "El campo del editorial está vacio";
    private final String YEAR_VACIO = "El campo del año está vacio";
    private final String TEMATICA_VACIO = "El campo de las temáticas está vacio añade temáticas";
    private LibroService libroServer;
    private TematicaService tematicaServer;
    private DefaultListModel<String> modeloJList;
    private List<String> temas;

    public ModiciarLibroJFrame() {
        initComponents();
        this.libroServer = new LibroService();
        this.tematicaServer = new TematicaService();
        this.temas = new ArrayList<>();
        mostrarLibros();
        this.modeloJList = new DefaultListModel<>();
        this.jList1.setModel(modeloJList);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonVolver = new javax.swing.JButton();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldAutor = new javax.swing.JTextField();
        jTextFieldEditorial = new javax.swing.JTextField();
        jTextFieldYear = new javax.swing.JTextField();
        jLabelErrorNumero = new javax.swing.JLabel();
        jComboBoxLibros = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jButtonSelccionarLibro = new javax.swing.JButton();
        jComboBoxTemas = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButtonAgregarTema = new javax.swing.JButton();
        jButtonQuitar = new javax.swing.JButton();
        jButtonModificarLibro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MostrarLibros");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(1, 21, 48));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(1, 21, 48));
        jLabel1.setText("Biblioteca|Modificar Libros ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 710, 50));

        jButtonVolver.setBackground(new java.awt.Color(1, 21, 48));
        jButtonVolver.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonVolver.setForeground(new java.awt.Color(255, 255, 255));
        jButtonVolver.setText("Volver");
        jButtonVolver.setAlignmentX(0.5F);
        jButtonVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVolverActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 470, 170, 50));

        jTextFieldNombre.setBackground(new java.awt.Color(250, 250, 250));
        jTextFieldNombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldNombre.setText("Nombre");
        jTextFieldNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        jTextFieldNombre.setEnabled(false);
        jTextFieldNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldNombreMouseClicked(evt);
            }
        });
        jPanel1.add(jTextFieldNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 130, 270, 40));

        jTextFieldAutor.setBackground(new java.awt.Color(250, 250, 250));
        jTextFieldAutor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldAutor.setText("Autor");
        jTextFieldAutor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        jTextFieldAutor.setEnabled(false);
        jTextFieldAutor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldAutorMouseClicked(evt);
            }
        });
        jPanel1.add(jTextFieldAutor, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 190, 270, 40));

        jTextFieldEditorial.setBackground(new java.awt.Color(250, 250, 250));
        jTextFieldEditorial.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldEditorial.setText("Editorial ");
        jTextFieldEditorial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        jTextFieldEditorial.setEnabled(false);
        jTextFieldEditorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldEditorialMouseClicked(evt);
            }
        });
        jPanel1.add(jTextFieldEditorial, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 270, 40));

        jTextFieldYear.setBackground(new java.awt.Color(250, 250, 250));
        jTextFieldYear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldYear.setText("Año de publicación");
        jTextFieldYear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(219, 219, 219)));
        jTextFieldYear.setEnabled(false);
        jTextFieldYear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextFieldYearMouseClicked(evt);
            }
        });
        jTextFieldYear.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldYearKeyTyped(evt);
            }
        });
        jPanel1.add(jTextFieldYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, 270, 40));

        jLabelErrorNumero.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelErrorNumero.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabelErrorNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 270, 20));

        jPanel1.add(jComboBoxLibros, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 190, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(1, 21, 48));
        jLabel2.setText("Selecciona el libro que quieres modificar");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 110, 350, 50));

        jButtonSelccionarLibro.setBackground(new java.awt.Color(1, 21, 48));
        jButtonSelccionarLibro.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSelccionarLibro.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSelccionarLibro.setText("Seleccionar");
        jButtonSelccionarLibro.setAlignmentX(0.5F);
        jButtonSelccionarLibro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSelccionarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSelccionarLibroActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSelccionarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 180, 50));

        jPanel1.add(jComboBoxTemas, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 210, -1));

        jScrollPane2.setViewportView(jList1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 340, 200, 120));

        jButtonAgregarTema.setBackground(new java.awt.Color(1, 21, 48));
        jButtonAgregarTema.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonAgregarTema.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAgregarTema.setText("Agregar");
        jButtonAgregarTema.setAlignmentX(0.5F);
        jButtonAgregarTema.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAgregarTema.setEnabled(false);
        jButtonAgregarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarTemaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAgregarTema, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 150, 40));

        jButtonQuitar.setBackground(new java.awt.Color(1, 21, 48));
        jButtonQuitar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonQuitar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonQuitar.setText("Quitar");
        jButtonQuitar.setAlignmentX(0.5F);
        jButtonQuitar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonQuitar.setEnabled(false);
        jButtonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQuitarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonQuitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 490, 150, 40));

        jButtonModificarLibro.setBackground(new java.awt.Color(1, 21, 48));
        jButtonModificarLibro.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonModificarLibro.setForeground(new java.awt.Color(255, 255, 255));
        jButtonModificarLibro.setText("Modificar");
        jButtonModificarLibro.setAlignmentX(0.5F);
        jButtonModificarLibro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonModificarLibro.setEnabled(false);
        jButtonModificarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarLibroActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonModificarLibro, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 170, 50));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVolverActionPerformed
        // TODO add your handling code here:
        MenuMostrar menuPrincipal = new MenuMostrar();
        menuPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonVolverActionPerformed

    private void jTextFieldNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldNombreMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldNombreMouseClicked
    public void mostrarTemas() {
        this.tematicaServer.mostrarTematicas().forEach((tematica) -> {
            jComboBoxTemas.addItem(tematica.getNombre());
        });
    }
    private void jTextFieldAutorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldAutorMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldAutorMouseClicked

    private void jTextFieldEditorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldEditorialMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldEditorialMouseClicked

    private void jTextFieldYearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextFieldYearMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextFieldYearMouseClicked

    private void jTextFieldYearKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldYearKeyTyped
        // TODO add your handling code here:

        char character = evt.getKeyChar();
        if (!Character.isDigit(character)) {
            this.jLabelErrorNumero.setText(ERROR_NUMERO);
            evt.consume();
        } else {
            this.jLabelErrorNumero.setText("");
        }
    }//GEN-LAST:event_jTextFieldYearKeyTyped

    private void jButtonSelccionarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSelccionarLibroActionPerformed
        // TODO add your handling code here:
        Libro libro = this.libroServer.obtenerUnObjetoSelecionado((String) this.jComboBoxLibros.getSelectedItem());
        this.jTextFieldNombre.setText(libro.getNombre());
        this.jTextFieldAutor.setText(libro.getAutor());
        this.jTextFieldEditorial.setText(libro.getEditorial());
        this.jTextFieldYear.setText(String.valueOf(libro.getYearPublicacion()));
        this.temas = libro.getTematicas();
        mostrarTematicasEnLaTabla(temas);
        enableTodoLosJTextField();
        mostrarTemas();
        enableTodoLodBotonoes();
    }//GEN-LAST:event_jButtonSelccionarLibroActionPerformed

    private void jButtonAgregarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarTemaActionPerformed
        // TODO add your handling code here:
        if (!comprobarSiElTemaEstaAdd()) {
            modeloJList.addElement((String) this.jComboBoxTemas.getSelectedItem());
            this.tematicaServer.mostrarTematicas().stream().filter((tema) -> (tema.getNombre().equals((String) this.jComboBoxTemas.getSelectedItem()))).forEachOrdered((tema) -> {
                this.temas.add(tema.getId());
            });

        } else {
            JOptionPane.showMessageDialog(null, TEMA_REPETIDO);
        }
    }//GEN-LAST:event_jButtonAgregarTemaActionPerformed

    private void jButtonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQuitarActionPerformed
        // TODO add your handling code here:
        modeloJList.removeElement((String) this.jComboBoxTemas.getSelectedItem());
        this.tematicaServer.mostrarTematicas().stream().filter((tema) -> (tema.getNombre().equals((String) this.jComboBoxTemas.getSelectedItem()))).forEachOrdered((tema) -> {
            this.temas.remove(tema.getId());
        });
    }//GEN-LAST:event_jButtonQuitarActionPerformed

    private void jButtonModificarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarLibroActionPerformed
        // TODO add your handling code here:
        if (!comprobarTodoLosCampos()) {
            String nombreViejo = (String) this.jComboBoxLibros.getSelectedItem();
            String nombreNuevo = this.jTextFieldNombre.getText();
            String autor = this.jTextFieldAutor.getText();
            String editorial = this.jTextFieldEditorial.getText();
            int yearPublicacion = Integer.valueOf(this.jTextFieldYear.getText());
            if (this.libroServer.modificarLibro(nombreViejo, nombreNuevo, autor, editorial, yearPublicacion, temas)) {
                JOptionPane.showMessageDialog(null, LIBRO_MODIFICADO);
                this.dispose();
                ModiciarLibroJFrame nuevaVentana = new ModiciarLibroJFrame();
                nuevaVentana.setVisible(true);

            }
        }
    }//GEN-LAST:event_jButtonModificarLibroActionPerformed
    public void enableTodoLosJTextField() {
        this.jTextFieldNombre.setEnabled(true);
        this.jTextFieldAutor.setEnabled(true);
        this.jTextFieldEditorial.setEnabled(true);
        this.jTextFieldYear.setEnabled(true);
    }

    /**
     * Función que comprueba si todos los campos estan vacio
     *
     * @return boolean
     */
    public boolean comprobarTodoLosCampos() {
        if (comprobarSiElNombreEstaVacio()) {
            JOptionPane.showMessageDialog(null, NOMBRE_VACIO);
            return true;
        } else if (comprobarSiAutorEstaVacio()) {
            JOptionPane.showMessageDialog(null, AUTOR_VACIO);
            return true;
        } else if (comprobarSiLaEditorialNoEstaVacia()) {
            JOptionPane.showMessageDialog(null, EDITORIAL_VACIO);
            return true;
        } else if (comprobarSiElYearEstaVacio()) {
            JOptionPane.showMessageDialog(null, YEAR_VACIO);
            return true;
        }
        return false;

    }

    public void enableTodoLodBotonoes() {
        this.jButtonAgregarTema.setEnabled(true);
        this.jButtonQuitar.setEnabled(true);
        this.jButtonModificarLibro.setEnabled(true);
    }

    public void mostrarTematicasEnLaTabla(List<String> temas) {

        for (Tematica tema : this.tematicaServer.mostrarTematicas()) {
            if (temas.contains(tema.getId())) {
                modeloJList.addElement(tema.getNombre());
            }
        }

    }

    /**
     * Función que comprueba si el tema está repetido
     *
     * @return boolean
     */
    public boolean comprobarSiElTemaEstaAdd() {
        return modeloJList.contains((String) this.jComboBoxTemas.getSelectedItem());
    }

    public void mostrarLibros() {
        for (Libro libro : this.libroServer.mostrarLibros()) {
            jComboBoxLibros.addItem(libro.getNombre());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModiciarLibroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModiciarLibroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModiciarLibroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModiciarLibroJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModiciarLibroJFrame().setVisible(true);
            }
        });
    }

    /**
     * Función que comprueba si campo del nombre está vacio
     *
     * @return boolean
     */
    public boolean comprobarSiElNombreEstaVacio() {
        return jTextFieldNombre.getText().isEmpty();
    }

    /**
     * Función que comprueba si el campo del autor vacio
     *
     * @return boolean
     */
    public boolean comprobarSiAutorEstaVacio() {
        return jTextFieldAutor.getText().isEmpty();
    }

    /**
     * Función que comprueba si campo de editorial está vacio
     *
     * @return boolean
     */
    public boolean comprobarSiLaEditorialNoEstaVacia() {
        return jTextFieldEditorial.getText().isEmpty();
    }

    /**
     * Función que comprueba si el campo del año está vacio
     *
     * @return boolean
     */
    public boolean comprobarSiElYearEstaVacio() {
        return jTextFieldYear.getText().isEmpty();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregarTema;
    private javax.swing.JButton jButtonModificarLibro;
    private javax.swing.JButton jButtonQuitar;
    private javax.swing.JButton jButtonSelccionarLibro;
    private javax.swing.JButton jButtonVolver;
    private javax.swing.JComboBox<String> jComboBoxLibros;
    private javax.swing.JComboBox<String> jComboBoxTemas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelErrorNumero;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldAutor;
    private javax.swing.JTextField jTextFieldEditorial;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldYear;
    // End of variables declaration//GEN-END:variables
}
